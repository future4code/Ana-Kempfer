{"ast":null,"code":"import _objectSpread from \"/home/skempfer/\\xC1rea de Trabalho/Ana-Kempfer/semana12/planner-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/skempfer/\\xC1rea de Trabalho/Ana-Kempfer/semana12/planner-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = {\n  allTasks: []\n};\n\nvar tasks = function tasks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CREATE_TODO\":\n      var newTodo = {\n        id: Date.now(),\n        text: action.payload.text,\n        completed: false\n      };\n      return {\n        allTodos: [].concat(_toConsumableArray(state.allTodos), [newTodo])\n      };\n\n    case \"COMPLETE_TODO\":\n      {\n        var newTodos = _toConsumableArray(state.allTodos);\n\n        var todoId = action.payload.todoId;\n        var indexToChange = newTodos.findIndex(function (todo) {\n          return todo.id === todoId;\n        });\n        newTodos[indexToChange].completed = !newTodos[indexToChange].completed;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          allTodos: newTodos\n        });\n      }\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/home/skempfer/Área de Trabalho/Ana-Kempfer/semana12/planner-boilerplate/src/reducers/tasks.js"],"names":["initialState","allTasks","tasks","state","action","type","newTodo","id","Date","now","text","payload","completed","allTodos","newTodos","todoId","indexToChange","findIndex","todo","todos"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;;AAIE,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,UAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADU;AAEdC,QAAAA,IAAI,EAAEN,MAAM,CAACO,OAAP,CAAeD,IAFP;AAGdE,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKA,aAAO;AAAEC,QAAAA,QAAQ,+BAAMV,KAAK,CAACU,QAAZ,IAAsBP,OAAtB;AAAV,OAAP;;AAEF,SAAK,eAAL;AAAsB;AACpB,YAAMQ,QAAQ,sBAAOX,KAAK,CAACU,QAAb,CAAd;;AADoB,YAEZE,MAFY,GAEDX,MAAM,CAACO,OAFN,CAEZI,MAFY;AAIpB,YAAMC,aAAa,GAAGF,QAAQ,CAACG,SAAT,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACX,EAAL,KAAYQ,MAAhB;AAAA,SAAvB,CAAtB;AACAD,QAAAA,QAAQ,CAACE,aAAD,CAAR,CAAwBJ,SAAxB,GAAoC,CAACE,QAAQ,CAACE,aAAD,CAAR,CAAwBJ,SAA7D;AAEA,+CAAYT,KAAZ;AAAmBU,UAAAA,QAAQ,EAAEC;AAA7B;AACD;AACA;;AACH;AACI,aAAOX,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAegB,KAAf","sourcesContent":["const initialState = {\n    allTasks: []\n  };\n  \n  const tasks = (state = initialState, action) => {\n    switch (action.type) {\n      case \"CREATE_TODO\":\n        const newTodo = {\n          id: Date.now(),\n          text: action.payload.text,\n          completed: false\n        };\n        return { allTodos: [...state.allTodos, newTodo] };\n  \n      case \"COMPLETE_TODO\": {\n        const newTodos = [...state.allTodos];\n        const { todoId } = action.payload;\n  \n        const indexToChange = newTodos.findIndex(todo => todo.id === todoId);\n        newTodos[indexToChange].completed = !newTodos[indexToChange].completed;\n  \n        return { ...state, allTodos: newTodos };\n      }\n       // }\n    default:\n        return state;\n    }\n  };\n  \n  export default todos;"]},"metadata":{},"sourceType":"module"}