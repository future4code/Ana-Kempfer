{"ast":null,"code":"import _defineProperty from \"/home/skempfer/\\xC1rea de Trabalho/Ana-Kempfer/semana10/astrotrips/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { actions } from \"../actions\";\nexport var generateReducers = function generateReducers(history) {\n  return combineReducers({\n    router: connectRouter(history) // Outros reducers aqui\n\n  });\n};\nvar initialState = {\n  all: []\n};\n\nvar tasks = function tasks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_ALL_TASKS':\n      {\n        return _objectSpread({}, state, {\n          all: action.payload.all\n        });\n      }\n\n    case 'MARK_ALL_TASKS_AS_COMPLETED':\n      {\n        var newall = state.all.map(function (task) {\n          task.done = true;\n          return task;\n        });\n        return _objectSpread({}, state, {\n          all: newall\n        });\n      }\n\n    case 'REMOVE_COMPLETED_TASKS':\n      {\n        var _newall = state.all.filter(function (task) {\n          if (task.done === true) {\n            return false;\n          }\n\n          return true;\n        });\n\n        return _objectSpread({}, state, {\n          all: _newall\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/home/skempfer/Área de Trabalho/Ana-Kempfer/semana10/astrotrips/src/reducers/index.js"],"names":["combineReducers","connectRouter","actions","generateReducers","history","router","initialState","all","tasks","state","action","type","payload","newall","map","task","done","filter"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,OAAO;AAAA,SACrCJ,eAAe,CAAC;AACdK,IAAAA,MAAM,EAAEJ,aAAa,CAACG,OAAD,CADP,CAId;;AAJc,GAAD,CADsB;AAAA,CAAhC;AAQL,IAAME,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIF,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAE5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AAAsB;AAClB,iCAAWF,KAAX;AAAkBF,UAAAA,GAAG,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAAtC;AACH;;AAED,SAAK,6BAAL;AAAmC;AAC/B,YAAMM,MAAM,GAAGJ,KAAK,CAACF,GAAN,CAAUO,GAAV,CAAc,UAAAC,IAAI,EAAI;AACjCA,UAAAA,IAAI,CAACC,IAAL,GAAY,IAAZ;AACA,iBAAOD,IAAP;AACH,SAHc,CAAf;AAKA,iCAAYN,KAAZ;AAAmBF,UAAAA,GAAG,EAAEM;AAAxB;AACH;;AAED,SAAK,wBAAL;AAA8B;AAC1B,YAAMA,OAAM,GAAGJ,KAAK,CAACF,GAAN,CAAUU,MAAV,CAAiB,UAACF,IAAD,EAAU;AACtC,cAAGA,IAAI,CAACC,IAAL,KAAc,IAAjB,EAAsB;AAClB,mBAAO,KAAP;AACH;;AACD,iBAAO,IAAP;AACH,SALc,CAAf;;AAOA,iCAAYP,KAAZ;AAAmBF,UAAAA,GAAG,EAAEM;AAAxB;AACH;;AAED;AACI,aAAOJ,KAAP;AA1BR;AA4BH,CA9BD;;AAgCA,eAAeD,KAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { actions } from \"../actions\";\n\nexport const generateReducers = history =>\n  combineReducers({\n    router: connectRouter(history)\n\n\n    // Outros reducers aqui\n  });\n\n  const initialState = {\n    all: []\n}\n\nconst tasks = (state = initialState, action) => {\n\n    switch(action.type){\n        case 'SET_ALL_TASKS': {\n            return {...state, all: action.payload.all }\n        }\n\n        case 'MARK_ALL_TASKS_AS_COMPLETED':{\n            const newall = state.all.map(task => {\n                task.done = true;\n                return task\n            })\n\n            return { ...state, all: newall }\n        }\n\n        case 'REMOVE_COMPLETED_TASKS':{\n            const newall = state.all.filter((task) => {\n                if(task.done === true){\n                    return false;\n                }\n                return true;\n            })\n\n            return { ...state, all: newall }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default tasks;\n"]},"metadata":{},"sourceType":"module"}