{"version":3,"sources":["logo.svg","video1.png","video2.png","video3.png","video4.png","video5.png","video6.png","video7.png","video8.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","type","id","placeholder","for","href","src","require","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,kC,kCCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,wFC8C5BC,MA1Cf,WACE,OACE,yBAAKC,UAAU,iBACb,gCACE,0CACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,YAAY,WAE5C,8BACI,6BACE,2BAAOF,KAAK,WAAWC,GAAG,UAC1B,2BAAOE,IAAI,UACX,4BACI,4BAAI,uBAAGC,KAAK,cAAR,cACJ,4BAAI,uBAAGA,KAAK,IAAR,YACJ,4BAAI,uBAAGA,KAAK,IAAR,oBACJ,4BAAI,uBAAGA,KAAK,IAAR,gBAGV,iCACE,uBAAGA,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,wCADhD,gBAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,sCADhD,2BAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,wCADhD,oBAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,kDADhD,eAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,uDADhD,mBAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,0CADhD,qBAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,6DADhD,cAEA,uBAAGH,KAAK,IACJ,yBAAKC,IAAKC,EAAQ,IAAsBC,IAAI,8DADhD,qCAIJ,+DC7BYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.391274aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/video1.f3286fed.png\";","module.exports = __webpack_public_path__ + \"static/media/video2.70bf63f2.png\";","module.exports = __webpack_public_path__ + \"static/media/video3.fc5da802.png\";","module.exports = __webpack_public_path__ + \"static/media/video4.965d43bd.png\";","module.exports = __webpack_public_path__ + \"static/media/video5.8f71f98c.png\";","module.exports = __webpack_public_path__ + \"static/media/video6.0e649be7.png\";","module.exports = __webpack_public_path__ + \"static/media/video7.451e672d.png\";","module.exports = __webpack_public_path__ + \"static/media/video8.05fcb4a2.png\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"corpo-do-site\">\n      <header>\n        <h1>FutureTube</h1>\n        <input type=\"text\" id=\"busca\" placeholder=\"Busca\"></input>\n      </header>\n      <main>\n          <nav>\n            <input type=\"checkbox\" id=\"check\"></input>\n            <label for=\"check\"></label>\n            <ul>\n                <li><a href=\"index.html\">INÍCIO</a></li>\n                <li><a href=\"\">EM ALTA</a></li>\n                <li><a href=\"\">INCRIÇÕES</a></li>\n                <li><a href=\"\">ORIGINAIS</a></li>\n            </ul>\n          </nav>  \n          <article>\n            <a href=\"\">\n                <img src={require(\"../src/video1.png\")} alt=\"imagem de cruz celta em fundo ecuro\"></img>Bela Irlanda</a>\n            <a href=\"\">\n                <img src={require(\"../src/video2.png\")} alt=\"imagem de plaquetas sanguínias\"></img>Plaquetas sanguínias</a>\n            <a href=\"\">\n                <img src={require(\"../src/video3.png\")} alt=\"imagem de pintura abstrata colorida\"></img>Pintura abstrata</a>\n            <a href=\"\">\n                <img src={require(\"../src/video4.png\")} alt=\"imagem do mar e areia da praia vistos de cima\"></img>Mar e areia</a>\n            <a href=\"\">\n                <img src={require(\"../src/video5.png\")} alt=\"imagem de um campo, com arvores ao fundo e neblina\"></img>Campo no outono</a>\n            <a href=\"\">\n                <img src={require(\"../src/video6.png\")} alt=\"imagem de lebre marron em campo verde\"></img>Lebre européia</a>\n            <a href=\"\">\n                <img src={require(\"../src/video7.png\")} alt=\"imagem do universo, uma estrela nebulosa em tons de roxo\"></img>O universo</a>\n            <a href=\"\">\n                <img src={require(\"../src/video8.png\")} alt=\"imagem de foguete pronto para ser lançado ao espaço\"></img>Foguete lançado ao espaço</a>\n          </article>\n        </main>\n        <footer>Desenvolvido por SKempfer</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}